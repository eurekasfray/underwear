PROGRESS

Before 2013-11-02:
    
    -- Studied Symfony and Negative 11 frameworks

Between 2013-11-02 and 2013-11-13:

    -- Developed majority of the framework.
    -- Stumbled upon problem to develop router that maps URI to a controller.

2013-11-13:

    -- Solved routing problem. The router now works!
    
       The problem was that I didn't know how to design a router that allows the
       placement of arguments anywhere within the URI. The router that allows
       this placement of arguments anywhere within the URI will not be developed
       just yet. So as an alternative, the URI shall be composed into parts
       where parts are separated by the forward slashes. Example: "/post/1234",
       where "post" and "1234" are separate parts. With this format, collecting
       arguments shall be a much easier task. And so too shall be the job of
       matching URIs to route paths.
       
2013-11-16:

    -- I'm having another problem that is related to routing. How do I load the
       app's routing config?
    
2014-02-10:

    -- I resumed the development of the framework. This project just way to much
       fun to stop! And not only that, I also need the framework for a website
       idea that I have. The framework will be used to develop a website which
       will allow users to announce things they've made. I need the framework
       for its MVC pattern which will make development and maintenance of the
       site much easier.
    -- Solved app-routing-config problem: Initially, I had the instructions in the `routing.php` file in the directory `app/config` included into the code of the Kernel dispatcher, like this: `$routeTable = include("routing.php")`. However, turns out that I may have been doing it wrong all along, which may be the reason why routing config never worked. In fact, the PHP `include` construct is very dynamic. I had needed to not use the parentheses and rather right the inclusion like this: `$routeTable = include "routing.php"`. That method is suggested by the PHP documentation. So, now the app-routing config works, and I have broken through a brickwall which was preventing my progression with this solution. Thank God!
    -- Next, I need to develop the View components.
    -- The render method of the View works! The View component is very minimal and only includes the method to render a template, which I stole from the Symfony tutorial on "Symfony vs Flat PHP".
    
    -- Problem: The request URI is taken and fed to the kernel regardless of if the URI is a file or directory. Which means that if a file is located on the server and it is requested, the file will not be displayed, because the file URI is fed to the Underwear rather than being handled by the server itself. Should that be?
    
    Also: Because the URI is taken regardless of if its a directory or file, how will images be captured by the templates in the template directory?
    
    -- Okay ... again ... I've been doing it all wrong! Files can now be viewed when entered as the URI. So, a file, "127.0.0.1/image.png", will be displayed. The problem was that the htaccess scripts instructed the server to rewrite all URIs, even if the URI is a file that is stored on the server.
    -- My next plan is to allow for query strings to be appended to requests.
    -- Added a default entry into the route table. The default route will be called if no route was found during the searching of the route table. To curve any error, because the default route is optional, if the default route is not found then nothing is displayed; a 404 response is returned with null content.
    -- Made sure to match the selected METHOD to the right controller. So if a route is created for a POST method, then that route is only dispatched if the request method is POST.
    -- The Request method compose() now creates an AbstractRequest object in which it composes only necessary HTTP request information (like request method, request URI, etc.). The framework will use the AbstractRequest object.
    
2014-03-23:

    -- Been documenting the framework.
    
2014-04-07:

    -- On-and-off, still working on documentation. It's really tough.
    
2014-04-18:

    -- Rewrote parts of the framework.
    
       1.